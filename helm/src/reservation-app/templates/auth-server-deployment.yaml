apiVersion: apps/v1
kind: Deployment

metadata:
    name: {{ .Release.Name }}-auth-server-deployment

spec:
    replicas: {{ .Values.authServerReplicas }}
    minReadySeconds: 15

    selector:
        matchLabels:
            component: auth-server

    strategy:
        rollingUpdate:
          maxSurge: 50%
          maxUnavailable: 50%
        type: RollingUpdate

    template:
        metadata:
            labels:
                component: auth-server
        spec:
            restartPolicy: Always
            containers:
            - name: auth-server
              image: {{ .Values.authServerImage }}:latest
              imagePullPolicy: Always
              
              readinessProbe:
                  httpGet:
                    path: /api/auth/account/health
                    port: 5000
                  initialDelaySeconds: 15
                  periodSeconds: 30
              
              ports:
                - containerPort: 5000
                  name: authc-web-port
                - containerPort: 5002
                  name: authc-grpc-port

              env:
                - name: DB_HOSTNAME
                  valueFrom:
                    configMapKeyRef:
                      key: DB_HOSTNAME
                      name: {{ .Release.Name }}-configmap
                - name: DB_PORT
                  valueFrom:
                    configMapKeyRef:
                      key: DB_PORT
                      name: {{ .Release.Name }}-configmap
                - name: DB_NAME
                  valueFrom:
                    configMapKeyRef:
                      key: DB_NAME
                      name: {{ .Release.Name }}-configmap
                - name: DB_USERNAME
                  valueFrom:
                    configMapKeyRef:
                      key: DB_USERNAME
                      name: {{ .Release.Name }}-configmap
                - name: DB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: DB_PASSWORD
                      name: {{ .Release.Name }}-secret
                - name: ADMIN_USER_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: ADMIN_USER_PASSWORD
                      name: {{ .Release.Name }}-secret

            initContainers:
              - name: init-{{ .Release.Name }}-postgresql
                image: postgres:9.6
                command: ['sh', '-c', 'until pg_isready -h {{ .Values.databaseServiceName }} -p {{ .Values.databasePort }}; do echo waiting for database; sleep 2; done; sleep 15;']
