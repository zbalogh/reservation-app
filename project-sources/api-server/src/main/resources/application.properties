spring.application.name=reservation-api-server
server.port=8080

# Enabling H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

#Turn Statistics on
spring.jpa.properties.hibernate.generate_statistics=true
logging.level.org.hibernate.stat=debug

# Show all queries
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.show-sql=true
logging.level.org.hibernate.type=trace



# H2 database database URL
#spring.datasource.url=jdbc:h2:mem:zbaloghspringdemo


# Database Properties for PostgreSQL
spring.datasource.url=jdbc:postgresql://${DB_HOSTNAME:localhost}:5432/zbaloghspringdemo
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:123dbsecret}

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL92Dialect



# Hibernate DDL auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=update

# we want to have DB initialization when application starting up and execute the "data.sql" file
#spring.datasource.initialization-mode=always
spring.datasource.initialization-mode=never



# test properties for my dummy custom bean
mycustombean.name=TestBean
mycustombean.title=This is just a test bean


# define the number of desks in the project (the default value is 200 if no environment variable)
reservation.alldesk_number=${RESERVATION_ALLDESK_NUMBER:200}

# JWT secret for token signature
reservation.jwt_secret_key=${RESERVATION_JWT_SECRET_KEY:XnnsB1gpeFasTsu0pWRQ3ZjUCJlOdw4H}

# Authentication server host name
reservation.authServerName=${RESERVATION_AUTH_SERVER_NAME:auth-server}
